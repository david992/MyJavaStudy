<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        https://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        https://www.springframework.org/schema/aop/spring-aop.xsd"
>

<!--    3.开启AOP命名空间 xmlns:aop-->

<!--    ④：开启AOP注解驱动支持-->
    <aop:aspectj-autoproxy proxy-target-class="false"/>

    <bean id="userService" class="com.study.service.Impl.UserServiceImpl"/>

<!--    2. 配置共性功能类为spring控制的资源-->
    <bean id="myAdvice" class="com.study.aop.AopAdvice"/>

<!--    4.配置aop-->
<!--    默认false:JDKproxy
            true:Cglib
            -->
    <aop:config proxy-target-class="true">

<!--    5.配置切入点    -->
        <!--
        关键字(访问修饰符 返回值 包名.类名.方法名(参数) 异常名)
        egg:execution(pubilc User com.study.service.UserService.save(int))
        切入点表达式（通配符）
        *   单个独立的任意符号
        ..  多个连续的任意符号
        +   专用于匹配子类类型
        -->
        <!--  全局切入点      -->
        <aop:pointcut id="pt" expression="execution(* *..*(..))"/>
        <aop:pointcut id="pt3" expression="execution(* *..canshu(..))"/>
        <aop:pointcut id="pt4" expression="execution(* com..*Service+.delete(..))"/>

    <!--    6.配置切面 （切入点与通知的关系）    -->
        <aop:aspect ref="myAdvice">
        <!--    7.配置具体的切入点对应通知中的那个方法        -->
            <!-- 局部切入点            -->
            <aop:pointcut id="pt2" expression="execution(* com..*Service+.save(..))"/>

            <aop:before method="aop001_function" pointcut-ref="pt2"/>
            <aop:before method="before" pointcut-ref="pt2"/>
            <aop:before method="before" pointcut="execution(* com..*Service+.save(..))"/>
            <aop:after method="after" pointcut-ref="pt2"/>
            <!--            after-returning  程序报错后不运行-->
            <aop:after-returning method="afterReturing" pointcut-ref="pt2"/>
            <!--            after-throwing  程序报错后才运行-->
            <aop:after-throwing method="afterThrowing" pointcut-ref="pt2"/>

            <aop:around method="around" pointcut-ref="pt2"/>

            <aop:before method="canshubefore" pointcut-ref="pt3"/>
            <aop:before method="canshubefore1" pointcut="execution(* com..*Service+.*(..)) &amp;&amp; args(x)"/>

            <aop:after-returning method="afterReturingTest" pointcut="execution(* com..*Service+.update(..))" returning="ret" />
            <aop:around method="aroundreturnTest" pointcut="execution(* com..*Service+.update(..))" />

            <aop:after-throwing method="afterThrowingTest" pointcut-ref="pt4" throwing="t"/>
            <aop:around  method="aroundThrowingTest" pointcut="execution(* com..*Service+.delete(..))" />
        </aop:aspect>
    </aop:config>
</beans>